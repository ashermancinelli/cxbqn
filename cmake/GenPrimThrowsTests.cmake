include(${ROOT}/cmake/GenHelpers.cmake)
message(STATUS "Generating primitive throwing tests")
set(P_TESTS
    "'a'+'c'"
    "F←-⋄f+2"
    "97-'a'"
    "@-1"
    "-'a'"
    "F←÷⋄-f"
    "2×'a'"
    "÷'b'"
    "F←√-⋄÷f"
    "⋆'π'"
    "'e'⋆'π'"
    "F←⌈⋄⌊f"
    "F←+⋄G←-⋄f≤g"
    "!0"
    "\\\"error\\\"!\\\"abc\\\""
    "√'x'"
    "'a'∧¯1"
    "F←-⋄2∨f"
    "¬'a'"
    "2¬'c'"
    "F←{𝕩}⋄0¬f"
    "F←+-⋄|f"
    "26|'A'"
    "⊑\\\"\\\""
    "⊑2‿0⥊⟨⟩"
    "+´11"
    "-´<'a'"
    "×´3‿1⥊\\\"abc\\\""
    "2‿3⊢¨4‿5‿6"
    "\\\"abcd\\\"-\\\"a\\\""
    "(↕4)×(↕3)⊢⌜↕2"
    "10⊑↕10"
    "¯11⊑↕10"
    "0.5⊑↕10"
    "'x'⊑↕10"
    "⟨⟩⊑↕10"
    "2⊑3+⌜○↕4"
    "21‿12‿03≡⟨2‿¯3‿0,1‿2,0‿¯1⟩⊑(10×↕3)+⌜↕4"
    "⟨2,⟨3⟩⟩⊑↕4"
    "(<2)⊑↕4"
    "(≍≍2)⊑↕4"
    "↕@"
    "↕2.4"
    "↕<6"
    "↕≍2‿3"
    "↕¯1‿2"
    "-˙◶÷‿× 4"
    "¯3⥊3"
    "1.6‿2.5⥊↕4"
    "(≍2‿3)⥊↕3"
    "\\\"     \\\"≡5⥊\\\"\\\""
    "4‿∘⥊↕15"
    ">↕¨2‿3"
    ">⟨⥊2,3⟩"
    ">(≍⋈⊢)↕4"
    "1‿0≍1‿2‿3"
    "≍⟜≍↕3"
    "⌽⎉1.1 ↕4"
    "⌽⎉'x' ↕4"
    "⌽⎉(<<0) ↕4"
    "⌽⎉≍ ↕4"
    "⌽⚇2‿2.5 ↕3"
    "2+⍟1‿'c'4"
    "⋆⍟1.5 2"
    "+\\`4"
    "+\\`<'c'"
    "3‿4+\\`4+⌜○↕3"
    "⊏\\\"\\\""
    "⊏0‿3⥊\\\"\\\""
    "3⊏\\\"abc\\\""
    "1.5⊏\\\"abc\\\""
    "'x'⊏\\\"abc\\\""
    "⟨⥊0,1⟩⊏≍\\\"abc\\\""
    "0‿0<¨⊸⊏\\\"abc\\\""
    "⟨3‿¯∞,⟨⟩⟩⊏4‿3⥊0"
    "(≍≍<5‿1)⊏↕6‿2"
    "2.5↑\\\"abce\\\""
    "2‿'c'↑\\\"abcd\\\""
    "(≍2‿3)↑\\\"abcd\\\""
    "0.1↓\\\"abcd\\\""
    "⟨∘⟩↓\\\"abcd\\\""
    "@↕↕5"
    "2‿1↕↕5"
    "¯1↕↕5"
    "7↕↕5"
    "'a'«'b'"
    "\\\"a\\\"»'b'"
    "≍⊸»\\\"abc\\\""
    "⌽'a'"
    "⌽<∞"
    "2⌽'a'"
    "1‿2⌽↕4"
    "⌽‿2⌽3+⌜○↕4"
    "(<<3)⌽↕4"
    "/2"
    "/1‿¯1‿0"
    "/=⌜˜↕2"
    "2/<2"
    "0‿1/\\\"abc\\\""
    "⟨↕3,↕3⟩/\\\"abc\\\""
    "1‿2/○≍\\\"ab\\\""
    "¯1‿2/\\\"ab\\\""
    "∾'c'"
    "∾\\\"abc\\\""
    "∾≍\\\"ab\\\"‿\\\"cde\\\"‿\\\"\\\""
    "∾⟨2‿3,1‿3,2‿2⟩⥊¨0"
    "'a'∾≍\\\"abc\\\""
    "\\\"ab\\\"∾○≍\\\"cde\\\""
    "(2‿3⥊↕6)∾↕2"
    "⊔3"
    "⊔<3"
    "⊔≍↕3"
    "⊔1.5‿0‿2"
    "⊔1‿¯2"
    "⊔˜'a'‿1‿0"
    "4⊔○↕2"
    "⟨1‿2,3‿1⟩⊔2‿3⥊0"
    "⟨1‿2,3‿4‿5,6‿7⟩⊔2‿3⥊0"
    "≍⊸⊔≍˘↕3"
    "⟨⟨<3,2⟩,¯1‿0‿¯1⟩⊔2‿3‿4⥊↕24"
    "(2‿3⥊↕4)⊔↕2‿2"
    "(3‿3⥊↕4)⊔↕2‿2"
    "⊐˜'a'"
    "⊏⊸⊐\\\"abc\\\""
    "(3‿2‿4⥊0)⊐4⥊1"
    "⊐+˙@"
    "(↕5)∊1"
    "2∊≍˘↕4"
    "∊<4"
    "⍷'a'"
    "≍⊸⍷\\\"abc\\\""
    "0‿¯1‿1⍉(3⥊1)⥊1"
    "1‿0≍˘⊸⍉\\\"ab\\\"≍\\\"cd\\\""
    "0‿2⍉+⌜˜↕3"
    "2‿0‿0⍉↕↕3"
    "3⍉↕↕3"
    "⍋'a'"
    "⍋'a'‿∘"
    "⍒2"
    "∧⊏⟨+⟩"
    "∧+‿-"
    "∨'c'"
    "⍋˜6"
    "⍒⟜↕4"
    "(3‿2‿4⥊0)⍋4⥊1"
    "(3‿2‿4⥊0)⍒1"
    "⟨+⟩⍋↕6"
    "⟨1‿3‿1,1‿3‿2⟩⍒⟨1‿3‿{𝕩}⟩"
    "⍉⌾≍ \\\"abc\\\""
    "-⌾⊏ 4"
    "↕∘≠⊸+⌾(10⊸⥊)↕6"
    "↕∘≠⊸+⌾(2⊸/)↕5"
    "1⊸⌽⌾(1‿3‿3‿0⊸⊏)\\\"abcd\\\""
    "⌽⌾(1↓4↑⊢)\\\"abc\\\""
)

set(P_TEST_SOURCE "${BUILDDIR}/test_prim_throws.cpp")
set(P_SETPRIMS_TEST_SOURCE "${BUILDDIR}/test_prim_setprims_throws.cpp")
init_gen_file(${P_TEST_SOURCE})
init_gen_file(${P_SETPRIMS_TEST_SOURCE})

foreach(test ${P_TESTS})
  execute_process(
    COMMAND ${BASH} -c
            "${BQN} ${ROOT}/test/ccxx.bqn ${ROOT}/ext//bqn -i \"${test}\""
    WORKING_DIRECTORY "${ROOT}/ext//cbqn"
    OUTPUT_VARIABLE compiled_test
  )
  string(REPLACE "\\`" "`" esc "${test}")
  file(
    APPEND ${P_SETPRIMS_TEST_SOURCE}
    "
      TEST_CASE(\"${esc}\") {
      const auto rt = provides::get_runtime_setprims_cached_annot();
      const auto runtime = rt->values;
      spdlog::critical(\"test='{}'\", \"${esc}\");
      CompileParams p( ${compiled_test} );
      REQUIRE_THROWS(vm::run(p.bc, p.consts.v, p.blk_defs, p.bodies, p.source_indices.value(), p.source_str));
      }
      "
  )
  file(
    APPEND ${P_TEST_SOURCE}
    "
      TEST_CASE(\"${esc}\") {
      const auto rt = provides::get_runtime_cached();
      const auto runtime = rt->values;
      spdlog::critical(\"test='{}'\", \"${esc}\");
      CompileParams p{ ${compiled_test} };
      REQUIRE_THROWS(vm::run(p.bc, p.consts.v, p.blk_defs, p.bodies));
      }
      "
  )
endforeach()
